name: E2E Tests

on:
  pull_request:
    branches: [ main, master ]
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Install Docker Compose
      run: |
        # Download and install Docker Compose v2.39.1
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.39.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        
        # Verify installation
        docker-compose --version

    - name: Run E2E tests
      run: make test:e2e

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: e2e-test-results
        path: reports/
        retention-days: 30

    - name: Upload test logs
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: e2e-test-logs
        path: |
          tests/e2e/docker/*.log
          tests/e2e/docker/**/*.log
        retention-days: 7

    - name: Comment PR with results
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request' && always()
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          // Check if test passed
          const testPassed = process.env.GITHUB_JOB_STATUS === 'success';
          
          // Try to read the last report file
          let reportInfo = '';
          try {
            const lastReport = fs.readFileSync('reports/.last_report', 'utf8');
            const reportFile = lastReport.match(/REPORT_FILE=(.*)/)?.[1];
            if (reportFile) {
              reportInfo = `\nüìÑ Test report: \`${reportFile}\``;
            }
          } catch (e) {
            // Ignore if file doesn't exist
          }
          
          const comment = `## E2E Test Results
          
          ${testPassed ? '‚úÖ **All E2E tests passed!**' : '‚ùå **E2E tests failed**'}${reportInfo}
          
          [View full workflow run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
      env:
        GITHUB_JOB_STATUS: ${{ job.status }}